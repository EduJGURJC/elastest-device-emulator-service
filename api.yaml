swagger: '2.0'
info:
  version: 1.0.0
  title: elastest-iiot-api
  description: "REST API description of the ElasTest Device Emulator Service (EDS)"

consumes:
  - application/json
produces:
  - application/json
paths:
  /devices:
    get:
      tags:
      - Device
      description: returns all registered devices
      operationId: getDevices
      parameters:
      - in: query
        name: skip
        type: integer
        format: int32
        description: number of records to skip
      - in: query
        name: limit
        type: integer
        format: int32
        description: max number of records to return
      responses:
        200:
          description: All the devices
          schema:
            type: array
            items:
              type: string
              format: uri
              example: http://10.0.0.225:8080
    post:
      tags:
      - Device
      operationId: register
      parameters:
      - in: body
        name: device
        required: false
        schema:
          $ref: '#/definitions/DeviceRegistrationInfo'
      responses:
        200:
          description: successfully registered device

  /sensor_data/temperature/{deviceId}/{value}:
    post:
      tags:
      - "Zigbee"
      operationId: "setSensordata"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "string"
      - name: "value"
        in: "path"
        required: true
        type: "integer"
        maximum: 100.0
        minimum: 0.0
        format: "int32"
      responses:
        200:
          description: "response"
          schema:
            $ref: "#/definitions/ApiResponse"
      x-swagger-router-controller: "Zigbee"
  
  /sensor_data/humidity/{deviceId}/{value}:
    post:
      tags:
      - "Zigbee"
      operationId: "setHumidity"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "string"
      - name: "value"
        in: "path"
        required: true
        type: "integer"
        maximum: 100.0
        minimum: 0.0
        format: "int32"
      responses:
        200:
          description: "response"
          schema:
            $ref: "#/definitions/ApiResponse"
      x-swagger-router-controller: "Zigbee"

  /sensor_data/humidity/{deviceId}/:
   get:
      tags:
      - Zigbee
      operationId: getHumid
      parameters:
      - name: deviceId
        in: path
        required: true
        type: string
      responses:
        200:
          description: response
          schema:
            $ref: '#/definitions/DeviceState'
      x-swagger-router-controller: Zigbee
  
  /sensor_data/temperature/{deviceId}/:
   get:
      tags:
      - Zigbee
      operationId: getTemp
      parameters:
      - name: deviceId
        in: path
        required: true
        type: string
      responses:
        200:
          description: response
          schema:
            $ref: '#/definitions/DeviceState'
      x-swagger-router-controller: Zigbee

  
  /actuator/{deviceId}:
    get:
      tags:
      - Actuator
      operationId: getMachineState
      parameters:
      - name: deviceId
        in: path
        required: true
        type: string
      responses:
        200:
          description: response
          schema:
            $ref: '#/definitions/DeviceState'
      x-swagger-router-controller: Actuator
  /actuator/{deviceId}/{value}:
    post:
      tags:
      - Actuator
      operationId: setMachineState
      parameters:
      - name: deviceId
        in: path
        required: true
        type: string
      - name: value
        in: path
        required: true
        type: string
        enum:
        - true
        - false
      responses:
        200:
          description: response
          schema:
            $ref: '#/definitions/ApiResponse'
      x-swagger-router-controller: Actuator
      
  /temperature:
    get:
      tags:
      - Motor
      operationId: temperatureSummary
      parameters: []
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Temperature'
      x-swagger-router-controller: Motor
  /speed:
    get:
      tags:
      - Motor
      operationId: speed
      parameters: []
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Speed'
      x-swagger-router-controller: Motor

      
definitions:
  

  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
        example: 'everything is ok'
 
  DeviceState:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      level:
        type: integer
        format: int32
 
  Temperature:
    type: object
    properties:
     degree: string
     value: 
        type: integer
        example: "20"
  Speed:
    type: object
    id:
        type: string
    name:
        type: string
    level:
        type: integer
        format: int32
    
 
  DeviceRegistrationInfo:
    type: object
    properties:
      uri:
        type: string
        format: uri
        example: http://localhost:8080
      id:
        type: string
        format: uuid
        example: '0729a580-2240-11e6-9eb5-0002a5d5c51b'
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /rowshan/Device/1.0.0
schemes:
 - https
